{"version":3,"file":"static/js/732.f17a4b94.chunk.js","mappings":"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","sources":["pages/Offline/Offline.tsx","../node_modules/@restart/hooks/esm/useIsomorphicEffect.js","../node_modules/@restart/hooks/esm/usePrevious.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/Alert.js","../node_modules/react-bootstrap/esm/Button.js","../node_modules/react-bootstrap/esm/Container.js"],"sourcesContent":["import { Link } from 'react-router-dom'\r\nimport { RoutePaths } from '../../routes/RoutePaths'\r\nimport { Colors } from 'src/constants/colors'\r\nimport { Container, Alert, Button, Row, Col } from 'react-bootstrap'\r\n\r\nexport const Offline = () => {\r\n  return (\r\n    <Container\r\n      className=\"mt-5 mx-auto text-center\"\r\n      style={{ maxWidth: '340px' }}\r\n    >\r\n      <Row className=\"justify-content-md-center\">\r\n        <Col md=\"auto\">\r\n          <h1 style={{ color: Colors.bootstrapBlue }}>OFFLINE</h1>\r\n          <Alert variant=\"danger\" className=\"mt-3\">\r\n            No internet connection\r\n          </Alert>\r\n          <p\r\n            className=\"mb-3\"\r\n            style={{ fontSize: '16px', fontWeight: '600', color: Colors.red }}\r\n          >\r\n            Sorry this page isn't available offline\r\n          </p>\r\n          <Button variant=\"primary\" className=\"mb-3\">\r\n            <Link\r\n              to={RoutePaths.Home}\r\n              style={{ color: Colors.white, textDecoration: 'none' }}\r\n            >\r\n              Back To Home Page\r\n            </Link>\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  )\r\n}\r\n","import { useEffect, useLayoutEffect } from 'react';\nvar isReactNative = typeof global !== 'undefined' && // @ts-ignore\nglobal.navigator && // @ts-ignore\nglobal.navigator.product === 'ReactNative';\nvar isDOM = typeof document !== 'undefined';\n/**\n * Is `useLayoutEffect` in a DOM or React Native environment, otherwise resolves to useEffect\n * Only useful to avoid the console warning.\n *\n * PREFER `useEffect` UNLESS YOU KNOW WHAT YOU ARE DOING.\n *\n * @category effects\n */\n\nexport default isDOM || isReactNative ? useLayoutEffect : useEffect;","import { useEffect, useRef } from 'react';\n/**\n * Store the last of some value. Tracked via a `Ref` only updating it\n * after the component renders.\n *\n * Helpful if you need to compare a prop value to it's previous value during render.\n *\n * ```ts\n * function Component(props) {\n *   const lastProps = usePrevious(props)\n *\n *   if (lastProps.foo !== props.foo)\n *     resetValueFromProps(props.foo)\n * }\n * ```\n *\n * @param value the value to track\n */\n\nexport default function usePrevious(value) {\n  var ref = useRef(null);\n  useEffect(function () {\n    ref.current = value;\n  });\n  return ref.current;\n}","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nvar targetMap = new WeakMap();\nvar resizeObserver;\n\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(function (entries) {\n    entries.forEach(function (entry) {\n      var handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\n\n\nexport default function useResizeObserver(element) {\n  var _useState = useState(null),\n      rect = _useState[0],\n      setRect = _useState[1];\n\n  useEffect(function () {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, function (rect) {\n      setRect(rect);\n    });\n    return function () {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useUncontrolled } from 'uncontrollable';\nimport useEventCallback from '@restart/hooks/useEventCallback';\nimport Anchor from '@restart/ui/Anchor';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport Fade from './Fade';\nimport CloseButton from './CloseButton';\nimport divWithClassName from './divWithClassName';\nimport createWithBsPrefix from './createWithBsPrefix';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst DivStyledAsH4 = divWithClassName('h4');\nDivStyledAsH4.displayName = 'DivStyledAsH4';\nconst AlertHeading = createWithBsPrefix('alert-heading', {\n  Component: DivStyledAsH4\n});\nconst AlertLink = createWithBsPrefix('alert-link', {\n  Component: Anchor\n});\nconst Alert = /*#__PURE__*/React.forwardRef((uncontrolledProps, ref) => {\n  const {\n    bsPrefix,\n    show = true,\n    closeLabel = 'Close alert',\n    closeVariant,\n    className,\n    children,\n    variant = 'primary',\n    onClose,\n    dismissible,\n    transition = Fade,\n    ...props\n  } = useUncontrolled(uncontrolledProps, {\n    show: 'onClose'\n  });\n  const prefix = useBootstrapPrefix(bsPrefix, 'alert');\n  const handleClose = useEventCallback(e => {\n    if (onClose) {\n      onClose(false, e);\n    }\n  });\n  const Transition = transition === true ? Fade : transition;\n  const alert = /*#__PURE__*/_jsxs(\"div\", {\n    role: \"alert\",\n    ...(!Transition ? props : undefined),\n    ref: ref,\n    className: classNames(className, prefix, variant && `${prefix}-${variant}`, dismissible && `${prefix}-dismissible`),\n    children: [dismissible && /*#__PURE__*/_jsx(CloseButton, {\n      onClick: handleClose,\n      \"aria-label\": closeLabel,\n      variant: closeVariant\n    }), children]\n  });\n  if (!Transition) return show ? alert : null;\n  return /*#__PURE__*/_jsx(Transition, {\n    unmountOnExit: true,\n    ...props,\n    ref: undefined,\n    in: show,\n    children: alert\n  });\n});\nAlert.displayName = 'Alert';\nexport default Object.assign(Alert, {\n  Link: AlertLink,\n  Heading: AlertHeading\n});","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useButtonProps } from '@restart/ui/Button';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Button = /*#__PURE__*/React.forwardRef(({\n  as,\n  bsPrefix,\n  variant = 'primary',\n  size,\n  active = false,\n  disabled = false,\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'btn');\n  const [buttonProps, {\n    tagName\n  }] = useButtonProps({\n    tagName: as,\n    disabled,\n    ...props\n  });\n  const Component = tagName;\n  return /*#__PURE__*/_jsx(Component, {\n    ...buttonProps,\n    ...props,\n    ref: ref,\n    disabled: disabled,\n    className: classNames(className, prefix, active && 'active', variant && `${prefix}-${variant}`, size && `${prefix}-${size}`, props.href && disabled && 'disabled')\n  });\n});\nButton.displayName = 'Button';\nexport default Button;","import classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Container = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  fluid = false,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  className,\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'container');\n  const suffix = typeof fluid === 'string' ? `-${fluid}` : '-fluid';\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, fluid ? `${prefix}${suffix}` : prefix)\n  });\n});\nContainer.displayName = 'Container';\nexport default Container;"],"names":["Offline","_jsx","Container","className","style","maxWidth","children","Row","_jsxs","Col","md","color","Colors","Alert","variant","fontSize","fontWeight","Button","Link","to","RoutePaths","textDecoration","isReactNative","global","navigator","product","document","useLayoutEffect","useEffect","usePrevious","value","ref","useRef","current","WeakMap","_excluded","Anchor","React","_ref","onKeyDown","props","source","excluded","key","i","target","sourceKeys","Object","keys","length","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","assign","tagName","handleKeyDown","useEventCallback","e","href","trim","role","displayName","DivStyledAsH4","divWithClassName","AlertHeading","createWithBsPrefix","Component","AlertLink","uncontrolledProps","bsPrefix","show","closeLabel","closeVariant","onClose","dismissible","transition","Fade","useUncontrolled","prefix","useBootstrapPrefix","handleClose","Transition","alert","undefined","classNames","concat","CloseButton","onClick","unmountOnExit","in","Heading","as","size","active","disabled","fluid","suffix"],"sourceRoot":""}
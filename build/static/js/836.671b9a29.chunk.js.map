{"version":3,"file":"static/js/836.671b9a29.chunk.js","mappings":"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","sources":["components/AddToFavorites/AddToFavorites.tsx","redux/actions/favorites/actions.ts","components/RemoveFromFavorites/RemoveFromFavorites.tsx","components/ContactCard/ContactCard.tsx","components/Empty/Empty.tsx","pages/ContactPage/ContactPage.tsx","redux/hooks.ts"],"sourcesContent":["import { useNavigate } from 'react-router-dom'\r\nimport { RoutePaths } from 'src/routes/RoutePaths'\r\nimport { addToFavoritesActionCreator } from 'src/redux/actions/favorites/actions'\r\nimport { useAppDispatch, useAppSelector } from 'src/redux/hooks'\r\nimport { ContactDto } from 'src/types/dto/ContactDto'\r\nimport { Colors } from 'src/constants/colors'\r\n\r\nexport const AddToFavorites: React.FC<{ contact: ContactDto }> = ({\r\n  contact,\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n  const navigate = useNavigate()\r\n\r\n  const favorites = useAppSelector((state) => state.favorites)\r\n\r\n  const isInFavorites = favorites.some((tr) => tr.id === contact.id)\r\n\r\n  const handleClick = () => {\r\n    if (isInFavorites) {\r\n      navigate(RoutePaths.Favorit)\r\n    } else {\r\n      dispatch(addToFavoritesActionCreator(contact))\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div onClick={handleClick}>\r\n      <svg\r\n        className=\"heart\"\r\n        aria-hidden=\"true\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill={`${isInFavorites ? Colors.red : Colors.bisque}`}\r\n        height=\"35px\"\r\n        width=\"35px\"\r\n        viewBox=\"0 0 22 22\"\r\n        stroke={Colors.red}\r\n      >\r\n        <path d=\"m12.7 20.7 6.2-7.1c2.7-3 2.6-6.5.8-8.7A5 5 0 0 0 16 3c-1.3 0-2.7.4-4 1.4A6.3 6.3 0 0 0 8 3a5 5 0 0 0-3.7 1.9c-1.8 2.2-2 5.8.8 8.7l6.2 7a1 1 0 0 0 1.4 0Z\" />\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n","import { ContactDto } from 'src/types/dto/ContactDto'\r\nimport { ADD_TO_FAVORITES_ACTION, REMOVE_FROM_FAVORITES_ACTION } from './types'\r\n\r\nexport function addToFavoritesActionCreator(contact: ContactDto) {\r\n  return {\r\n    type: ADD_TO_FAVORITES_ACTION as typeof ADD_TO_FAVORITES_ACTION,\r\n    payload: { contact },\r\n  }\r\n}\r\n\r\nexport function removeFromFavoritesActionCreator(id: ContactDto['id']) {\r\n  return {\r\n    type: REMOVE_FROM_FAVORITES_ACTION as typeof REMOVE_FROM_FAVORITES_ACTION,\r\n    payload: { id },\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { useAppDispatch } from 'src/redux/hooks'\r\nimport { removeFromFavoritesActionCreator } from 'src/redux/actions/favorites/actions'\r\nimport { ContactDto } from 'src/types/dto/ContactDto'\r\nimport { Colors } from 'src/constants/colors'\r\n\r\nexport const RemoveFromFavorites: React.FC<{ id: ContactDto['id'] }> = ({\r\n  id,\r\n}) => {\r\n  const dispatch = useAppDispatch()\r\n\r\n  const handleClick = () => dispatch(removeFromFavoritesActionCreator(id))\r\n\r\n  return (\r\n    <div onClick={handleClick}>\r\n      <svg\r\n        className=\"heart\"\r\n        aria-hidden=\"true\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n        fill={Colors.red}\r\n        height=\"35px\"\r\n        width=\"35px\"\r\n        viewBox=\"0 0 140 140\"\r\n        stroke={Colors.red}\r\n      >\r\n        <path d=\"M73.13,93.77,59.58,107.21,44,92.19c-2.43-2.35-5.25-4.92-8.18-7.59C19.93,70.14.79,52.69,0,31.09l0-1.65A28.51,28.51,0,0,1,9,8.54,31.68,31.68,0,0,1,29.57.31l1.71,0c13.72.18,20,6.2,28.18,14.24C66.21,7.38,71.81,1.52,83.21.21a33.07,33.07,0,0,1,18.62,3.37,34.41,34.41,0,0,1,12.24,10.25,31,31,0,0,1,6,14.86A30.55,30.55,0,0,1,116.82,46c-.41.8-.88,1.65-1.39,2.52l-.45.74A30.65,30.65,0,0,1,73.13,93.77Zm30.73-27.85a3.87,3.87,0,0,1,1.48.29,3.92,3.92,0,0,1,1.26.84,4,4,0,0,1,.84,1.25l0,.07a3.78,3.78,0,0,1,.28,1.35v.15a3.86,3.86,0,0,1-.29,1.41,4.15,4.15,0,0,1-.84,1.26,3.7,3.7,0,0,1-1.25.83l-.07,0a4,4,0,0,1-1.39.28H80.6a3.87,3.87,0,0,1-1.48-.3l-.06,0a3.58,3.58,0,0,1-1.2-.81A3.87,3.87,0,0,1,77,71.3l0-.07a4,4,0,0,1-.28-1.4v0A4,4,0,0,1,77,68.33a3.86,3.86,0,0,1,.84-1.27,4,4,0,0,1,1.25-.83,3.71,3.71,0,0,1,1.47-.3Zm6.19-21.06c.34-.58.67-1.17,1-1.76a24.13,24.13,0,0,0,2.56-13.67,24.39,24.39,0,0,0-4.72-11.73,27.78,27.78,0,0,0-9.92-8.31A26.62,26.62,0,0,0,84,6.68c-9.13,1-14,6.2-19.9,12.47l-4.43,4.64L55.2,19.45c-7.27-7.14-12.74-12.52-24-12.67l-1.4,0a25.21,25.21,0,0,0-16.36,6.5A22.12,22.12,0,0,0,6.49,29.52l0,1.34c.67,18.85,18.72,35.3,33.67,48.93,2.89,2.63,5.67,5.16,8.32,7.72l11,10.61,9-8.91a30.66,30.66,0,0,1,41.55-44.35Zm-.76,7.87a24.14,24.14,0,1,0,7.07,17.07,24.06,24.06,0,0,0-7.07-17.07Z\" />\r\n      </svg>\r\n    </div>\r\n  )\r\n}\r\n","import { memo } from 'react'\r\nimport { Link, useLocation } from 'react-router-dom'\r\nimport { RoutePaths } from 'src/routes/RoutePaths'\r\nimport { AddToFavorites } from '../AddToFavorites/AddToFavorites'\r\nimport { RemoveFromFavorites } from '../RemoveFromFavorites/RemoveFromFavorites'\r\nimport { ContactDto } from 'src/types/dto/ContactDto'\r\nimport { Colors } from 'src/constants/colors'\r\nimport { Card, ListGroup } from 'react-bootstrap'\r\nimport '../components.css'\r\n\r\ninterface ContactCardProps {\r\n  contact: ContactDto\r\n  withLink?: boolean\r\n}\r\n\r\nexport const ContactCard = memo<ContactCardProps>(({ contact, withLink }) => {\r\n  const { photo, id, name, phone, birthday, address } = contact\r\n  const location = useLocation()\r\n\r\n  return (\r\n    <Card\r\n      key={id}\r\n      style={{\r\n        textShadow: `1px 1px 1px ${Colors.black}`,\r\n        border: `1px solid Colors.bisque`,\r\n        boxShadow: `0 -2px 5px ${Colors.black}`,\r\n      }}\r\n    >\r\n      <Card.Img variant=\"top\" src={photo} />\r\n      <Card.Body style={{ borderRadius: '5px', background: Colors.bisque }}>\r\n        <Card.Body\r\n          style={{\r\n            display: 'flex',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Card.Title\r\n            style={{\r\n              color: Colors.blue,\r\n            }}\r\n          >\r\n            {withLink ? (\r\n              <Link\r\n                style={{\r\n                  fontWeight: '700',\r\n                  textShadow: `1px 1px 1px ${Colors.black}`,\r\n                }}\r\n                to={`${RoutePaths.Contacts}/${id}`}\r\n              >\r\n                <div className=\"text-truncate\">{name}</div>\r\n              </Link>\r\n            ) : (\r\n              name\r\n            )}\r\n          </Card.Title>\r\n          {location.pathname === RoutePaths.Favorit ? (\r\n            <RemoveFromFavorites id={contact.id} />\r\n          ) : (\r\n            <AddToFavorites contact={contact} />\r\n          )}\r\n        </Card.Body>\r\n        <Card.Body>\r\n          <ListGroup>\r\n            <ListGroup.Item\r\n              style={{\r\n                background: Colors.bisque,\r\n                boxShadow: `0 -2px 5px ${Colors.black}`,\r\n              }}\r\n            >\r\n              <Link to={`tel:${phone}`} target=\"_blank\">\r\n                {phone}\r\n              </Link>\r\n            </ListGroup.Item>\r\n            <ListGroup.Item\r\n              style={{\r\n                color: Colors.green,\r\n                fontWeight: '600',\r\n                background: Colors.bisque,\r\n                boxShadow: `0 -2px 5px ${Colors.black}`,\r\n              }}\r\n            >\r\n              {birthday}\r\n            </ListGroup.Item>\r\n            <ListGroup.Item\r\n              style={{\r\n                color: Colors.red,\r\n                textShadow: `-1px 1px 1px ${Colors.black}`,\r\n                background: Colors.bisque,\r\n                boxShadow: `0 -2px 5px ${Colors.black}`,\r\n              }}\r\n            >\r\n              {address}\r\n            </ListGroup.Item>\r\n          </ListGroup>\r\n        </Card.Body>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n})\r\n","import { Toast } from 'react-bootstrap'\r\n\r\nexport const Empty = () => {\r\n  return (\r\n    <Toast bg={'danger'}>\r\n      <Toast.Header closeButton={false}>Empty</Toast.Header>\r\n      <Toast.Body>Data not found</Toast.Body>\r\n    </Toast>\r\n  )\r\n}\r\n","import { FC, useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom'\r\nimport { useAppSelector } from 'src/redux/hooks'\r\nimport { Empty } from 'src/components/Empty/Empty'\r\nimport { ContactCard } from 'src/components/ContactCard/ContactCard'\r\nimport { ContactDto } from 'src/types/dto/ContactDto'\r\nimport { Col, Row } from 'react-bootstrap'\r\n\r\nexport const ContactPage: FC = () => {\r\n  const { contactId } = useParams<{ contactId: string }>()\r\n  const [contact, setContact] = useState<ContactDto>()\r\n\r\n  const contacts = useAppSelector((state) => state.contacts)\r\n\r\n  useEffect(() => {\r\n    setContact(() => contacts.find(({ id }) => id === contactId))\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [contactId])\r\n\r\n  return (\r\n    <Row xxl={3}>\r\n      <Col className={'mx-auto'}>\r\n        {contact ? <ContactCard contact={contact} /> : <Empty />}\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n","import { Dispatch } from 'redux'\r\nimport { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux'\r\nimport { RootState } from './store'\r\nimport { ProjectActions } from './actions/ProjectActions'\r\n\r\nexport const useAppDispatch = useDispatch<Dispatch<ProjectActions>>\r\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector\r\n"],"names":["AddToFavorites","_ref","contact","dispatch","useAppDispatch","navigate","useNavigate","isInFavorites","useAppSelector","state","favorites","some","tr","id","_jsx","onClick","handleClick","RoutePaths","type","ADD_TO_FAVORITES_ACTION","payload","addToFavoritesActionCreator","children","className","xmlns","fill","concat","Colors","height","width","viewBox","stroke","d","RemoveFromFavorites","REMOVE_FROM_FAVORITES_ACTION","removeFromFavoritesActionCreator","ContactCard","memo","withLink","photo","name","phone","birthday","address","location","useLocation","_jsxs","Card","style","textShadow","border","boxShadow","variant","src","borderRadius","background","display","justifyContent","color","Link","fontWeight","to","pathname","ListGroup","target","Empty","Toast","bg","closeButton","ContactPage","contactId","useParams","setContact","useState","contacts","useEffect","find","Row","xxl","Col","useDispatch","useSelector"],"sourceRoot":""}